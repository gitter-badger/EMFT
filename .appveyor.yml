
version: pending.{build}
max_jobs: 1


environment:
    GIT_DAEMON_PATH:   "C:\\Program Files\\Git\\mingw64\\libexec\\git-core"
    CYGWIN_GIT_PATH:   "C:\\cygwin\\bin;%GIT_DAEMON_PATH%"
    CYGWIN64_GIT_PATH: "C:\\cygwin64\\bin;%GIT_DAEMON_PATH%"
    PYTHON: "C:\\Python35"
    PYTHON_VERSION: "3.5.2"
    GIT_PATH: "%GIT_DAEMON_PATH%"
#    CODACY_PROJECT_TOKEN:
#      secure: KufyrkuCy7as7DpyKxxqpyQKDX4Zvhyz1szpaoFTsqw90iRsE/wNkaFJIGj+wKsE
#    SCRUTINIZER:
#      secure: Z7n1eRV3NvHwwVK3ay0Ng6J09jJe/jNbq+2KJXZhDMBFVLrPjsIGyEyXOHgxLf8h3K7JYctoNOJ3yAnQ10cuGJY2amVbcrPCDzx0cUFe/g0=
#    CODECLIMATE_REPO_TOKEN:
#      secure: 5g9TZWYrT6Bq9BSvMcI408Nyh9OcoCHU+wFYXV7Q8nBg7lgRjH/ht1p2MQwJhsiEGHqw3Krk+h6a3w92725ldwxKOWrc8twh92gOPC0b4gs=
#    COVERALLS_REPO_TOKEN:
#      secure: 0Vci1JqP+KrmA8CjVryiikwJRk2W198nIHmPwk0W75zrz1b1Orz2+JrdgqLl5d3q
    GH_PAGES_TOKEN:
      secure: Wn4FCPRsCJUZy0bnpVt2ClZSp9XsrT0rocBBNDOFGPvmcCZq4fPNDWI1FfoO08zV
    GH_MAIL:
      secure: 9bVWUcCZXTNmCwwwQ9c/LY+ZxQWBTzzEJoojPZbp4Qk=


matrix:
    fast_finish: true

init:
  - cmd: echo %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%
  - cmd: appveyor UpdateBuild -Version "%APPVEYOR_REPO_BRANCH%.%APPVEYOR_REPO_COMMIT%.%APPVEYOR_BUILD_NUMBER%"

cache:
#  - C:\Program Files (x86)\Inno Setup 5
  - C:\Users\appveyor\AppData\Local\pip\cache
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
  - C:\ProgramData\chocolatey\lib -> appveyor.yml
#  - C:\Python35 -> requirement*.txt
  - '%APPDATA%\pip\Cache'

install:
#  - "%PYTHON%/Scripts/pip.exe install --disable-pip-version-check --user --upgrade pip"
#  - "%PYTHON%/Scripts/pip.exe install --upgrade coverage"
  - "%PYTHON%/Scripts/pip.exe install -r requirements.txt"
  - "%PYTHON%/Scripts/pip.exe install -r own_requirements.txt --upgrade"
  - choco install gitversion.portable -pre -y
#  - nuget install secure-file -ExcludeVersion
#  - choco install -y InnoSetup curl
#  - curl -O http://esrg.sourceforge.net/utils_win_up/md5sum/crc32.exe
#  - set PATH="C:\Program Files (x86)\Inno Setup 5";%PATH%
  - choco install gitversion.portable -y
#  - "where gitversion"
  - git clone --branch=master https://github.com/132nd-etcher/verpatch.git C:\projects\verpatch
#  - secure-file\tools\secure-file -decrypt vault\secret.pyd.enc -secret %VAULT_SECRET% -out vault\secret.pyd


before_build:
  - ps: C:\ProgramData\chocolatey\bin\gitversion /l console /output buildserver /updateassemblyinfo /b (get-item env:APPVEYOR_REPO_BRANCH).Value
  - cmd: appveyor UpdateBuild -Version %GitVersion_InformationalVersion%.%APPVEYOR_BUILD_NUMBER%
  - cmd: cd ..
  - cmd: git clone --branch=master https://github.com/132nd-etcher/utils.git
  - cmd: cd utils
  - "%PYTHON%/python -m pytest --cov=src --cov-config .coveragerc --cov-report xml -c tests/.pytest"
  - cmd: cd ..
  - cmd: git clone --branch=master https://github.com/132nd-etcher/sltp.git
  - cmd: cd sltp
  - "%PYTHON%/python -m pytest --cov=src --cov-config .coveragerc --cov-report xml -c tests/.pytest"
  - cmd: cd ..
  - "%PYTHON%/python -m pytest --cov=src --cov-config .coveragerc --cov-report xml -c tests/.pytest"
#  - "%PYTHON%/Scripts/pip.exe install git+https://github.com/132nd-etcher/ocular.py.git"
#  - "%PYTHON%/Scripts/ocular.exe --access-token %SCRUTINIZER%"
#  - "%PYTHON%/Scripts/pip.exe install codacy-coverage"
#  - "%PYTHON%/Scripts/python-codacy-coverage.exe -r coverage.xml"
#  - "%PYTHON%/Scripts/pip.exe install coveralls"
#  - "%PYTHON%/Scripts/coveralls.exe"
#  - "%PYTHON%/Scripts/pip.exe install codecov"
#  - "%PYTHON%/Scripts/codecov.exe"

build_script:
  - set PATH="c:\projects\verpatch";%PATH%
  - "%PYTHON%/python.exe -m PyInstaller src/main.py --noconfirm --onefile --clean --icon src/ui/app.ico --workpath ./build --paths %PYTHON%/Lib/site-packages/PyQt5/Qt/bin --name EMFT --distpath ./dist --windowed --log-level=WARN"
  - cmd: verpatch.exe %APPVEYOR_BUILD_FOLDER%\dist\emft.exe /high %GitVersion_SemVer% /va /pv %GitVersion_SemVer% /s product EMFT /s copyright "2017 etcher" /s build %GitVersion_Sha% /langid 1033 /s PrivateBuild %APPVEYOR_BUILD_NUMBER%
#  - git config --global credential.helper store
#  - ps: Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:GH_PAGES_TOKEN):x-oauth-basic@github.com`n"
#  - "IF %APPVEYOR_REPO_BRANCH%==master %PYTHON%/Scripts/mkdocs.exe build --clean --strict -v -f .mkdocs.yml"
#  - "IF %APPVEYOR_REPO_BRANCH%==master git config --global user.email %GH_MAIL%"
#  - "IF %APPVEYOR_REPO_BRANCH%==master git config --global user.name 132nd-etcher"
#  - "IF %APPVEYOR_REPO_BRANCH%==master %PYTHON%/Scripts/mkdocs.exe gh-deploy --clean -v -f .mkdocs.yml"

artifacts:
  - path: ./dist/*.exe
    name: emft

branches:
  only:
    - master
    - develop
    - /release/.*/
    - /pull/.*/
    - /hotfix/.*/
    - /feature/.*/

  except:
    - gh-pages

deploy:
  - provider: GitHub
    artifact: emft
    draft: false
    prerelease: false
    tag: $(GitVersion_SemVer)
    auth_token:
      secure: T9LMiMzikVwlfnYhxlIpzhmfotDN75SUmEv1FSGLHZ/vMHMCMT3SEapSOH1iPdaD
    on:
#      branch: master
      appveyor_repo_tag: false

skip_tags: true

skip_branch_with_pr: true

skip_commits:
  files:
    - docs/*
    - '**/*.html'
  message: /.*\[nobuild\].*/

